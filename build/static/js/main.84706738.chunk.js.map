{"version":3,"sources":["NavbarComponent.js","PushupCounter.js","App.js","index.js"],"names":["NavbarComponent","React","Component","constructor","props","super","render","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","src","this","userPhoto","className","alt","height","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","firebase","auth","signOut","PushupCounter","state","count","countPushup","bind","setState","console","log","navigator","vibrate","Button","size","Card","Header","as","Body","Title","Text","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","settings","timestampsInSnapshots","uiConfig","signInFlow","signInSuccessUrl","signInOptions","FacebookAuthProvider","PROVIDER_ID","App","isSignedIn","undefined","componentDidMount","unregisterAuthObserver","onAuthStateChanged","user","collection","doc","uid","set","displayName","photoURL","email","then","catch","error","componentWillUnmount","signedIn","currentUser","src_NavbarComponent","src_PushupCounter","StyledFirebaseAuth_default","firebaseAuth","rootElement","document","getElementById","ReactDOM","StrictMode","src_App"],"mappings":"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","file":"static/js/main.84706738.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Nav, Spinner,NavDropdown, Navbar } from 'react-bootstrap';\r\nimport firebase from 'firebase';\r\n\r\nclass NavbarComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n        return (\r\n\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" >\r\n                <img src={this.props.userPhoto}\r\n                     className=\"rounded-circle z-depth-0\"\r\n                     alt=\"avatar image\"\r\n                     height=\"35\"/>\r\n                <Navbar.Brand href=\"#home\">Pushup Challenge</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#features\">Stats</Nav.Link>\r\n                        <Nav.Link onClick={() => firebase.auth().signOut()}>Sign Out</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                \r\n                \r\n            </Navbar>\r\n        );\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n}\r\nexport default NavbarComponent;","import React from \"react\";\r\nimport { Button, Card, Nav, Spinner, Navbar } from 'react-bootstrap';\r\nimport firebase from 'firebase';\r\n\r\n\r\nclass PushupCounter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 0,\r\n        };\r\n        this.countPushup = this.countPushup.bind(this);\r\n    }\r\n\r\n\r\n    countPushup() {\r\n\r\n        this.setState((state) => {\r\n            // Important: read `state` instead of `this.state` when updating.\r\n            return {count: state.count + 1}\r\n\r\n\r\n        });\r\n        console.log(\"+1\");\r\n        console.log(this.state.count);\r\n        navigator.vibrate(1000);\r\n\r\n        // for this uid>unique session>update count\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div >\r\n                <h1>{this.state.count}</h1>\r\n                <Button variant=\"primary\" size=\"lg\" onClick={this.countPushup}>\r\n                    Nose Here\r\n                </Button>\r\n\r\n                <Card onClick={this.countPushup}>\r\n                    <Card.Header as=\"h5\">Featured</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Special title treatment</Card.Title>\r\n                        <Card.Text>\r\n                            With supporting text below as a natural lead-in to additional content.\r\n                        </Card.Text>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default PushupCounter;","// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firestore from \"firestore\";\nimport { Button, Card, Spinner, Navbar } from 'react-bootstrap';\nimport NavbarComponent from './NavbarComponent';\nimport PushupCounter from './PushupCounter';\n// Configure Firebase.\nconst config = {\n    apiKey: \"AIzaSyD8G9JmSEDqQT8Ae64g3BpuToRk4YYY_mo\",\n    authDomain: \"pushup-30791.firebaseapp.com\",\n    databaseURL: \"https://pushup-30791.firebaseio.com\",\n    projectId: \"pushup-30791\",\n    storageBucket: \"pushup-30791.appspot.com\",\n    messagingSenderId: \"235185051023\",\n    appId: \"1:235185051023:web:f219df8d36dc037c5ee7fa\",\n    measurementId: \"G-K929YMYWRR\"\n    // ...\n};\nconst firebaseApp = firebase.initializeApp(config);\nconst db = firebase.firestore();\ndb.settings({\n    timestampsInSnapshots: true\n});\n// Configure FirebaseUI.\nconst uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'redirect',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '/',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n        firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ]\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSignedIn: undefined,\n        };\n    }\n\n    componentDidMount() {\n        // This binding is necessary to make `this` work in the callback\n        //firebase.auth().signOut()\n        // firebase.auth().onAuthStateChanged(function(user) {\n        //     \n        // });\n\n        this.unregisterAuthObserver = firebaseApp.auth().onAuthStateChanged((user) => {\n            this.setState({isSignedIn: !!user});\n\n            if (user) {\n                // User is signed in.\n                console.log(\"Succesfully signed in\");\n                // console.log(user);\n                const userRef = db.collection(\"users\").doc(user.uid).set({\n                    displayName: user.displayName,\n                    photoURL: user.photoURL,\n                    email: user.email\n                }).then(function() {\n                    console.log(\"Succesfully updated user\", user);\n                }).catch(function(error) {\n                    console.error(\"Error writing user data: \", error);\n                });\n            } else {\n                // No user is signed in.\n                console.log(\"not signed in\");\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unregisterAuthObserver();\n    }\n\n    // render() {\n    //     console.log(\"user\", currentUser);\n    //\n    //     return (\n    //         <div >\n    //\n    //             <h1>My App</h1>\n    //             <p>Please sign-in:</p>\n    //             <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\n    //         </div>\n    //     );\n    // }\n\n    render() {\n        const signedIn = this.state.isSignedIn;\n        var user = null;\n        if (signedIn) {\n            user = firebaseApp.auth().currentUser;\n        }\n\n        return (\n            <div >\n                {\n                    (!signedIn || !user)\n                    ?\n                        (<div>\n                            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\n                        </div>)\n                    :\n                        (<div >\n                            <NavbarComponent userPhoto={user.photoURL}/>\n                            <PushupCounter />\n                            Hello {user.displayName}. You are now signed In!\n                            <a onClick={() => firebaseApp.auth().signOut()}>Sign-out</a>\n                        </div>)\n                }\n            </div>\n        );\n    }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}